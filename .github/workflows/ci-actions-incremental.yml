concurrency:
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository
    != 'quarkusio/quarkus' }}
  group: workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{
    github.event.pull_request.id }}
defaults:
  run:
    shell: bash
env:
  COMMON_MAVEN_ARGS: -e -B --settings .github/mvn-settings.xml --fail-at-end
  COMMON_TEST_MAVEN_ARGS: -Dformat.skip -Denforcer.skip -DskipDocs -Dforbiddenapis.skip
    -DskipExtensionValidation -DskipCodestartValidation
  DB_NAME: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_USER: hibernate_orm_test
  DEVELOCITY_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  JVM_TEST_MAVEN_ARGS: -Dtest-containers -Dstart-containers -Dquarkus.test.hang-detection-timeout=60
  LANG: en_US.UTF-8
  NATIVE_TEST_MAVEN_ARGS: -Dtest-containers -Dstart-containers -Dquarkus.native.native-image-xmx=6g
    -Dnative -Dnative.surefire.skip -Dno-descriptor-tests clean install -DskipDocs
  PTS_MAVEN_ARGS: -Ddevelocity.pts.enabled=${{ github.event_name == 'pull_request'
    && github.base_ref == 'main' && 'true' || 'false' }}
  PULL_REQUEST_NUMBER: ${{ github.event.number }}
jobs:
  attach-pr-number:
    if: github.event_name == 'pull_request'
    name: Attach pull request number
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Create file
      run: 'echo -n ${{ github.event.number }} > pull-request-number

        '
    - continue-on-error: true
      name: Upload pull request number
      uses: actions/upload-artifact@v4
      with:
        name: pull-request-number-${{ github.event.number }}
        path: pull-request-number
        retention-days: 1
  build-jdk17:
    if: (github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
      && ( github.event_name != 'pull_request' || ( github.event.pull_request.draft
      == false && github.event.pull_request.state != 'closed' && github.event.action
      != 'edited' ) )
    name: Initial JDK 17 Build
    outputs:
      gib_args: ${{ steps.get-gib-args.outputs.gib_args }}
      gib_impacted: ${{ steps.get-gib-impacted.outputs.impacted_modules }}
      m2-cache-key: ${{ steps.cache-key.outputs.m2-cache-key }}
      quarkus-metadata-cache-key: ${{ steps.cache-key.outputs.quarkus-metadata-cache-key
        }}
      quarkus-metadata-cache-key-default: ${{ steps.cache-key.outputs.quarkus-metadata-cache-key-default
        }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-17" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Initial JDK 17 Build" >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Add quarkusio remote
      run: git remote show quarkusio &> /dev/null || git remote add quarkusio https://github.com/quarkusio/quarkus.git
    - continue-on-error: true
      name: Reclaim Disk Space
      run: .github/ci-prerequisites.sh
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      id: cache-key
      name: Generate cache key
      run: 'CURRENT_WEEK=$(/bin/date -u "+%Y-%U")

        echo "m2-cache-key=m2-cache-${CURRENT_WEEK}" >> $GITHUB_OUTPUT

        echo "quarkus-metadata-cache-key=quarkus-metadata-cache-${CURRENT_WEEK}-${{
        github.ref_name }}" >> $GITHUB_OUTPUT

        echo "quarkus-metadata-cache-key-default=quarkus-metadata-cache-${CURRENT_WEEK}-${{
        github.event.repository.default_branch }}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: cache-maven
      name: Cache Maven Repository
      uses: actions/cache@v4
      with:
        key: ${{ steps.cache-key.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Verify native-tests.json
      run: ./.github/verify-tests-json.sh native-tests.json integration-tests/
    - continue-on-error: true
      name: Verify virtual-threads-tests.json
      run: ./.github/verify-tests-json.sh virtual-threads-tests.json integration-tests/virtual-threads/
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Initial JDK 17 Build
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Build
      run: './mvnw -T1C $COMMON_MAVEN_ARGS -DskipTests -DskipITs -DskipDocs -Dinvoker.skip
        -Dskip.gradle.tests -Djbang.skip -Dtruststore.skip -Dno-format -Dtcks -Prelocations
        clean install

        '
    - continue-on-error: true
      name: Verify extension dependencies
      run: ./update-extension-dependencies.sh $COMMON_MAVEN_ARGS
    - continue-on-error: true
      env:
        PULL_REQUEST_BASE: ${{ github.event.pull_request.base.ref }}
      id: get-gib-args
      name: Get GIB arguments
      run: "# See also: https://github.com/gitflow-incremental-builder/gitflow-incremental-builder#configuration\
        \ (GIB)\n# Common GIB_ARGS for all CI cases (hint: see also root pom.xml):\n\
        # - disableSelectedProjectsHandling: required to detect changes in jobs that\
        \ use -pl\n# - untracked: to ignore files created by jobs (and uncommitted\
        \ to be consistent)\nGIB_ARGS=\"-Dincremental -Dgib.disableSelectedProjectsHandling\
        \ -Dgib.untracked=false -Dgib.uncommitted=false\"\nif [ -n \"$PULL_REQUEST_BASE\"\
        \ ]\nthen\n  # The PR defines a clear merge target so just use that branch\
        \ for reference, *unless*:\n  # - the current branch is a backport branch\
        \ targeting some released branch like 1.10 (merge target is not main)\n  GIB_ARGS+=\"\
        \ -Dgib.referenceBranch=origin/$PULL_REQUEST_BASE -Dgib.disableIfReferenceBranchMatches='origin/\\\
        d+\\.\\d+'\"\nelse\n  # No PR means the merge target is uncertain so fetch\
        \ & use main of quarkusio/quarkus, *unless*:\n  # - the current branch is\
        \ main or some released branch like 1.10\n  # - the current branch is a backport\
        \ branch which is going to target some released branch like 1.10 (merge target\
        \ is not main)\n  GIB_ARGS+=\" -Dgib.referenceBranch=refs/remotes/quarkusio/main\
        \ -Dgib.fetchReferenceBranch -Dgib.disableIfBranchMatches='main|\\d+\\.\\\
        d+|.*backport.*'\"\nfi\necho \"GIB_ARGS: $GIB_ARGS\"\necho \"gib_args=${GIB_ARGS}\"\
        \ >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      id: get-gib-impacted
      name: Get GIB impacted modules
      run: "./mvnw -q -T1C $COMMON_MAVEN_ARGS -Dscan=false -Dtcks -Dquickly-ci ${{\
        \ steps.get-gib-args.outputs.gib_args }} -Dgib.logImpactedTo=gib-impacted.log\
        \ validate\nif [ -f gib-impacted.log ]\nthen\n  GIB_IMPACTED=$(cat gib-impacted.log)\n\
        else\n  GIB_IMPACTED='_all_'\nfi\necho \"GIB_IMPACTED: ${GIB_IMPACTED}\"\n\
        # three steps to retain linefeeds in output for other jobs\n# (see https://github.com/github/docs/issues/21529\
        \ and https://github.com/orgs/community/discussions/26288#discussioncomment-3876281)\n\
        echo 'impacted_modules<<EOF' >> $GITHUB_OUTPUT\necho \"${GIB_IMPACTED}\" >>\
        \ $GITHUB_OUTPUT\necho 'EOF' >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      name: Tar .m2/repository/io/quarkus
      run: tar -czf m2-io-quarkus.tgz -C ~ .m2/repository/io/quarkus
    - continue-on-error: true
      name: Upload .m2/repository/io/quarkus
      uses: actions/upload-artifact@v4
      with:
        name: m2-io-quarkus
        path: m2-io-quarkus.tgz
        retention-days: 7
    - continue-on-error: true
      name: Delete snapshots artifacts from cache
      run: find ~/.m2 -name \*-SNAPSHOT -type d -exec rm -rf {} +
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    'target/build-report.json' \\\n\
        \    'target/gradle-build-scan-url.txt' \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Initial JDK 17 Build
        path: 'build-reports.zip

          '
        retention-days: 7
  build-report:
    if: always()
    name: Build report
    needs:
    - build-jdk17
    - jvm-tests
    - maven-tests
    - gradle-tests
    - devtools-tests
    - kubernetes-tests
    - quickstarts-tests
    - tcks-test
    - native-tests
    - virtual-thread-native-tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        path: build-reports-artifacts
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: Produce report and add it as job summary
      uses: quarkusio/action-build-reporter@main
      with:
        build-reports-artifacts-path: build-reports-artifacts
        github-token: ${{ secrets.GITHUB_TOKEN }}
  calculate-test-jobs:
    env:
      GIB_IMPACTED_MODULES: ${{ needs.build-jdk17.outputs.gib_impacted }}
    if: github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/main')
    name: Calculate Test Jobs
    needs: build-jdk17
    outputs:
      jvm_matrix: ${{ steps.calc-jvm-matrix.outputs.matrix }}
      native_matrix: ${{ steps.calc-native-matrix.outputs.matrix }}
      run_devtools: ${{ steps.calc-run-flags.outputs.run_devtools }}
      run_gradle: ${{ steps.calc-run-flags.outputs.run_gradle }}
      run_jvm: ${{ steps.calc-run-flags.outputs.run_jvm }}
      run_kubernetes: ${{ steps.calc-run-flags.outputs.run_kubernetes }}
      run_maven: ${{ steps.calc-run-flags.outputs.run_maven }}
      run_quickstarts: ${{ steps.calc-run-flags.outputs.run_quickstarts }}
      run_tcks: ${{ steps.calc-run-flags.outputs.run_tcks }}
      virtual_threads_matrix: ${{ steps.calc-virtual-threads-matrix.outputs.matrix
        }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: calc-native-matrix
      name: Calculate matrix from native-tests.json
      run: 'echo "GIB_IMPACTED_MODULES: ${GIB_IMPACTED_MODULES}"

        json=$(.github/filter-native-tests-json.sh "${GIB_IMPACTED_MODULES}" | tr
        -d ''\n'')

        echo "${json}"

        echo "matrix=${json}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: calc-jvm-matrix
      name: Calculate matrix from matrix-jvm-tests.json
      run: 'json=$(.github/filter-jvm-tests-json.sh)

        echo "${json}"

        echo "matrix=${json}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: calc-virtual-threads-matrix
      name: Calculate matrix from virtual-threads-tests.json
      run: 'echo "GIB_IMPACTED_MODULES: ${GIB_IMPACTED_MODULES}"

        json=$(.github/filter-virtual-threads-tests-json.sh "${GIB_IMPACTED_MODULES}"
        | tr -d ''\n'')

        echo "${json}"

        echo "matrix=${json}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: calc-run-flags
      name: Calculate run flags
      run: "run_jvm=true; run_devtools=true; run_gradle=true; run_maven=true; run_kubernetes=true;\
        \ run_quickstarts=true; run_tcks=true\nif [ -z \"${GIB_IMPACTED_MODULES}\"\
        \ ]\nthen\n  run_jvm=false; run_devtools=false; run_gradle=false; run_maven=false;\
        \ run_kubernetes=false; run_quickstarts=false; run_tcks=false\nelif [ \"${GIB_IMPACTED_MODULES}\"\
        \ != '_all_' ]\nthen\n  # Important: keep -pl ... in actual jobs in sync with\
        \ the following grep commands!\n  if ! echo -n \"${GIB_IMPACTED_MODULES}\"\
        \ | grep -qPv 'integration-tests/(devtools|gradle|maven|devmode|kubernetes/.*)|tcks/.*';\
        \ then run_jvm=false; fi\n  if ! echo -n \"${GIB_IMPACTED_MODULES}\" | grep\
        \ -q 'integration-tests/devtools'; then run_devtools=false; fi\n  if ! echo\
        \ -n \"${GIB_IMPACTED_MODULES}\" | grep -q 'integration-tests/gradle'; then\
        \ run_gradle=false; fi\n  if ! echo -n \"${GIB_IMPACTED_MODULES}\" | grep\
        \ -qP 'integration-tests/(maven|devmode)'; then run_maven=false; fi\n  if\
        \ ! echo -n \"${GIB_IMPACTED_MODULES}\" | grep -qP 'integration-tests/kubernetes/.*';\
        \ then run_kubernetes=false; fi\n  if ! echo -n \"${GIB_IMPACTED_MODULES}\"\
        \ | grep -qPv '(docs|integration-tests|tcks)/.*'; then run_quickstarts=false;\
        \ fi\n  if ! echo -n \"${GIB_IMPACTED_MODULES}\" | grep -q 'tcks/.*'; then\
        \ run_tcks=false; fi\nfi\necho \"run_jvm=${run_jvm}, run_devtools=${run_devtools},\
        \ run_gradle=${run_gradle}, run_maven=${run_maven}, run_kubernetes=${run_kubernetes},\
        \ run_quickstarts=${run_quickstarts}, run_tcks=${run_tcks}\"\necho \"run_jvm=${run_jvm}\"\
        \ >> $GITHUB_OUTPUT\necho \"run_devtools=${run_devtools}\" >> $GITHUB_OUTPUT\n\
        echo \"run_gradle=${run_gradle}\" >> $GITHUB_OUTPUT\necho \"run_maven=${run_maven}\"\
        \ >> $GITHUB_OUTPUT\necho \"run_kubernetes=${run_kubernetes}\" >> $GITHUB_OUTPUT\n\
        echo \"run_quickstarts=${run_quickstarts}\" >> $GITHUB_OUTPUT\necho \"run_tcks=${run_tcks}\"\
        \ >> $GITHUB_OUTPUT\n"
  ci-sanity-check:
    if: github.repository == 'quarkusio/quarkus' || !endsWith(github.ref, '/main')
    name: CI Sanity Check
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Build
      run: sleep 30
  devtools-tests:
    if: needs.calculate-test-jobs.outputs.run_devtools == 'true' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: Devtools Tests - JDK ${{matrix.java.name}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-${{matrix.java.name}}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Devtools Tests - JDK ${{matrix.java.name}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      if: startsWith(matrix.java.os-name, 'windows')
      name: Support longpaths on Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java.java-version }}
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Devtools Tests - JDK ${{matrix.java.name}}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Build
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS $JVM_TEST_MAVEN_ARGS
        clean install -pl 'integration-tests/devtools'
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -name '*-reports' -type d -o -name '*.log' | tar -czf test-reports.tgz
        -T -
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-devtools-java${{matrix.java.name}}
        path: test-reports.tgz
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/target/*-reports/TEST-*.xml'\
        \ \\\n    'target/build-report.json' \\\n    'target/gradle-build-scan-url.txt'\
        \ \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Devtools Tests - JDK ${{matrix.java.name}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix:
        java:
        - java-version: 17
          name: '17'
          os-name: ubuntu-latest
        - java-version: 21
          name: '21'
          os-name: ubuntu-latest
        - java-version: 17
          name: 17 Windows
          os-name: windows-latest
    timeout-minutes: 60
  gradle-tests:
    env:
      MAVEN_OPTS: -Xmx1g
    if: needs.calculate-test-jobs.outputs.run_gradle == 'true' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: Gradle Tests - JDK ${{matrix.java.name}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-${{matrix.java.name}}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Gradle Tests - JDK ${{matrix.java.name}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      if: startsWith(matrix.java.os-name, 'windows')
      name: Support longpaths on Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java.java-version }}
      uses: actions/setup-java@v4
      with:
        cache: gradle
        distribution: temurin
        java-version: ${{ matrix.java.java-version }}
    - continue-on-error: true
      if: '!startsWith(matrix.java.os-name, ''windows'')'
      name: Verify dependencies
      run: ./integration-tests/gradle/update-dependencies.sh $COMMON_MAVEN_ARGS -Dscan=false
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Gradle Tests - JDK ${{matrix.java.name}}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Build
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS $JVM_TEST_MAVEN_ARGS
        clean install -pl integration-tests/gradle
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/build/test-results/test/TEST-*.xml'\
        \ \\\n    '**/target/*-reports/TEST-*.xml' \\\n    'target/build-report.json'\
        \ \\\n    'target/gradle-build-scan-url.txt' \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Gradle Tests - JDK ${{matrix.java.name}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix:
        java:
        - java-version: 17
          name: '17'
          os-name: ubuntu-latest
        - java-version: 17
          name: 17 Windows
          os-name: windows-latest
    timeout-minutes: 120
  jvm-tests:
    env:
      JAVA_VERSION_GRADLE: ${{ matrix.java.java-version-gradle || matrix.java.java-version
        }}
      MAVEN_OPTS: ${{ matrix.java.maven_opts }}
    if: needs.calculate-test-jobs.outputs.run_jvm == 'true' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: JVM Tests - JDK ${{matrix.java.name}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-${{matrix.java.name}}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=JVM Tests - JDK ${{matrix.java.name}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      if: '!startsWith(matrix.java.os-name, ''windows'') && !startsWith(matrix.java.os-name,
        ''macos'')'
      name: Stop mysql
      run: 'ss -ln

        sudo service mysql stop || true

        '
    - continue-on-error: true
      if: startsWith(matrix.java.os-name, 'windows')
      name: Support longpaths on Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Add quarkusio remote for GIB
      run: git remote show quarkusio &> /dev/null || git remote add quarkusio https://github.com/quarkusio/quarkus.git
    - continue-on-error: true
      if: '!startsWith(matrix.java.os-name, ''windows'') && !startsWith(matrix.java.os-name,
        ''macos'')'
      name: apt clean
      run: sudo apt-get clean
    - continue-on-error: true
      if: '!startsWith(matrix.java.os-name, ''windows'') && !startsWith(matrix.java.os-name,
        ''macos'')'
      name: Reclaim Disk Space
      run: .github/ci-prerequisites.sh
    - continue-on-error: true
      if: ${{ env.JAVA_VERSION_GRADLE != matrix.java.java-version }}
      name: Set up JDK ${{ env.JAVA_VERSION_GRADLE }} for Gradle (if needed)
      uses: actions/setup-java@v4
      with:
        architecture: ${{ matrix.java.architecture || 'x64' }}
        distribution: temurin
        java-version: ${{ matrix.java.java-version-gradle }}
    - continue-on-error: true
      if: ${{ env.JAVA_VERSION_GRADLE != matrix.java.java-version }}
      name: Set up GRADLE_JAVA_HOME (if needed)
      run: 'JAVA_HOME_ARCHITECTURE=$(echo "${{ matrix.java.architecture || ''x64''
        }}" | tr [:lower:] [:upper:])

        GRADLE_JAVA_HOME_VARIABLE="JAVA_HOME_${JAVA_VERSION_GRADLE}_${JAVA_HOME_ARCHITECTURE}"

        echo "GRADLE_JAVA_HOME=${!GRADLE_JAVA_HOME_VARIABLE}" >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java.java-version }}
      uses: actions/setup-java@v4
      with:
        architecture: ${{ matrix.java.architecture || 'x64' }}
        distribution: ${{ matrix.java.java-distribution || 'temurin' }}
        java-version: ${{ matrix.java.java-version }}
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: JVM Tests - JDK ${{matrix.java.name}}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Build
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS clean
        install -Dsurefire.timeout=1200 -pl !integration-tests/gradle -pl !integration-tests/maven
        -pl !integration-tests/devmode -pl !integration-tests/devtools -Dno-test-kubernetes
        -pl !docs ${{ matrix.java.maven_args }} ${{ needs.build-jdk17.outputs.gib_args
        }}
    - continue-on-error: true
      if: always()
      name: Clean Gradle temp directory
      run: devtools/gradle/gradlew --stop && rm -rf devtools/gradle/gradle-extension-plugin/build/tmp
    - continue-on-error: true
      if: always() && !startsWith(matrix.java.os-name, 'windows') && !startsWith(matrix.java.os-name,
        'macos')
      name: Analyze disk space
      run: .github/ci-disk-usage.sh
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -name '*-reports' -type d -o -name '*.log' | tar -czf test-reports.tgz
        -T -
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-jvm${{matrix.java.name}}
        path: test-reports.tgz
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/target/*-reports/TEST-*.xml'\
        \ \\\n    'target/build-report.json' \\\n    'target/gradle-build-scan-url.txt'\
        \ \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-JVM Tests - JDK ${{matrix.java.name}}
        path: 'build-reports.zip

          '
        retention-days: 7
    - continue-on-error: true
      if: ${{ failure() || cancelled() }}
      name: Upload build.log (if build failed)
      uses: actions/upload-artifact@v4
      with:
        name: build-logs-JVM Tests - JDK ${{matrix.java.name}}
        path: '**/build.log

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.calculate-test-jobs.outputs.jvm_matrix) }}
    timeout-minutes: 400
  kubernetes-tests:
    if: needs.calculate-test-jobs.outputs.run_kubernetes == 'true' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: Kubernetes Tests - JDK ${{matrix.java.name}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-${{matrix.java.name}}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Kubernetes Tests - JDK ${{matrix.java.name}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      if: startsWith(matrix.java.os-name, 'windows')
      name: Support longpaths on Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java.java-version }}
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Kubernetes Tests - JDK ${{matrix.java.name}}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Build
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS $JVM_TEST_MAVEN_ARGS
        clean install -f 'integration-tests/kubernetes'
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -name '*-reports' -type d -o -name '*.log' | tar -czf test-reports.tgz
        -T -
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-kubernetes-java${{matrix.java.name}}
        path: test-reports.tgz
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/target/*-reports/TEST-*.xml'\
        \ \\\n    'target/build-report.json' \\\n    'target/gradle-build-scan-url.txt'\
        \ \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Kubernetes Tests - JDK ${{matrix.java.name}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix:
        java:
        - java-version: 17
          name: '17'
          os-name: ubuntu-latest
        - java-version: 21
          name: '21'
          os-name: ubuntu-latest
        - java-version: 17
          name: 17 Windows
          os-name: windows-latest
    timeout-minutes: 40
  maven-tests:
    env:
      MAVEN_OPTS: -Xmx2g -XX:MaxMetaspaceSize=1g
    if: needs.calculate-test-jobs.outputs.run_maven == 'true' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: Maven Tests - JDK ${{matrix.java.name}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-${{matrix.java.name}}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Maven Tests - JDK ${{matrix.java.name}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      if: startsWith(matrix.java.os-name, 'windows')
      name: Support longpaths on Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Add quarkusio remote for GIB
      run: git remote show quarkusio &> /dev/null || git remote add quarkusio https://github.com/quarkusio/quarkus.git
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java.java-version }}
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Maven Tests - JDK ${{matrix.java.name}}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Build
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS $JVM_TEST_MAVEN_ARGS
        clean install -pl 'integration-tests/maven' -pl 'integration-tests/devmode'
        ${{ needs.build-jdk17.outputs.gib_args }}
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -name '*-reports' -type d -o -name '*.log' | tar -czf test-reports.tgz
        -T -
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-maven-java${{matrix.java.name}}
        path: test-reports.tgz
        retention-days: 7
    - continue-on-error: true
      if: ${{ failure() || cancelled() }}
      name: Rename invalid path
      run: 'if [ -d ''integration-tests/maven/target/test-classes/projects/qit?fast?jar''
        ]; then mv ''integration-tests/maven/target/test-classes/projects/qit?fast?jar''
        ''integration-tests/maven/target/test-classes/projects/qit--fast--jar''; fi

        if [ -d ''integration-tests/maven/target/test-classes/projects/qit?legacy?jar''
        ]; then mv ''integration-tests/maven/target/test-classes/projects/qit?legacy?jar''
        ''integration-tests/maven/target/test-classes/projects/qit--legacy--jar'';
        fi

        if [ -d ''integration-tests/maven/target/test-classes/projects/qit?uber?jar''
        ]; then mv ''integration-tests/maven/target/test-classes/projects/qit?uber?jar''
        ''integration-tests/maven/target/test-classes/projects/qit--uber--jar''; fi

        '
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/target/*-reports/TEST-*.xml'\
        \ \\\n    'target/build-report.json' \\\n    'target/gradle-build-scan-url.txt'\
        \ \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Maven Tests - JDK ${{matrix.java.name}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix:
        java:
        - java-version: 17
          name: '17'
          os-name: ubuntu-latest
        - java-version: 17
          name: 17 Windows
          os-name: windows-latest
    timeout-minutes: 130
  native-tests:
    env:
      MAVEN_OPTS: -Xmx1g
    if: needs.calculate-test-jobs.outputs.native_matrix != '{}' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: Native Tests - ${{matrix.category}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'category=$(echo -n ''${{matrix.category}}'' | tr ''[:upper:]'' ''[:lower:]''
        | tr -c ''[:alnum:]-'' ''-'' | sed -E ''s/-+/-/g'')

        echo "GE_TAGS=native-${category}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Native Tests - ${{matrix.category}}" >>
        "$GITHUB_ENV"

        '
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'windows')
      name: Support longpaths on Windows
      run: git config --global core.longpaths true
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      if: ${{ !startsWith(matrix.os-name, 'windows') }}
      name: Reclaim Disk Space
      run: .github/ci-prerequisites.sh
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'windows')
      name: Install cl.exe
      uses: ilammy/msvc-dev-cmd@v1
    - continue-on-error: true
      if: startsWith(matrix.os-name, 'windows')
      uses: microsoft/setup-msbuild@v2
    - continue-on-error: true
      id: setup-graalvm
      if: startsWith(matrix.os-name, 'windows')
      name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        distribution: mandrel
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: '21'
        version: mandrel-latest
    - continue-on-error: true
      name: Update Docker Client User Agent
      run: "if [ -f ~/.docker/config.json ]; then\n  cat <<< $(jq '.HttpHeaders +=\
        \ {\"User-Agent\": \"Quarkus-CI-Docker-Client\"}' ~/.docker/config.json) >\
        \ ~/.docker/config.json\nfi\n"
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Native Tests - ${{matrix.category}}
    - continue-on-error: true
      name: Cache Quarkus metadata
      uses: actions/cache@v4
      with:
        key: ${{ needs.build-jdk17.outputs.quarkus-metadata-cache-key }}
        path: '**/.quarkus/quarkus-prod-config-dump'
        restore-keys: ${{ needs.build-jdk17.outputs.quarkus-metadata-cache-key-default
          }}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
        CONTAINER_BUILD: ${{startsWith(matrix.os-name, 'windows') && 'false' || 'true'}}
        TEST_MODULES: ${{matrix.test-modules}}
      name: Build
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS -f integration-tests
        -pl "$TEST_MODULES" $NATIVE_TEST_MAVEN_ARGS -Dquarkus.native.container-build=$CONTAINER_BUILD
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -type d -name '*-reports' -o -wholename '*/build/reports/tests/functionalTest'
        -o -name '*.log' | tar -czf test-reports.tgz -T -
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-native-${{matrix.category}}
        path: test-reports.tgz
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/target/*-reports/TEST-*.xml'\
        \ \\\n    '**/build/test-results/test/TEST-*.xml' \\\n    'target/build-report.json'\
        \ \\\n    'target/gradle-build-scan-url.txt' \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Native Tests - ${{matrix.category}}
        path: 'build-reports.zip

          '
        retention-days: 7
    - continue-on-error: true
      name: Collect build JSON stats
      run: find . -name '*runner*.json' | tar czvf build-stats.tgz -T -
      shell: bash
    - continue-on-error: true
      name: Upload build JSON stats
      uses: actions/upload-artifact@v4
      with:
        name: build-stats-${{matrix.category}}
        path: build-stats.tgz
        retention-days: 7
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.calculate-test-jobs.outputs.native_matrix) }}
      max-parallel: 12
    timeout-minutes: ${{matrix.timeout}}
  native-tests-stats-upload:
    if: ${{ always() && github.repository == 'quarkusio/quarkus' && endsWith(github.ref,
      '/main') && github.event_name != 'pull_request' && needs.native-tests.result
      != 'skipped' && needs.native-tests.result != 'cancelled' }}
    name: Upload build stats to collector
    needs:
    - native-tests
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        path: workflow-quarkus
        repository: graalvm/mandrel
    - continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        name: build-stats-${{matrix.category}}
        path: .
    - continue-on-error: true
      env:
        COLLECTOR_URL: https://collector.foci.life/api/v1/image-stats
        TAG: quarkus-main-ci
        UPLOAD_TOKEN: ${{ secrets.UPLOAD_COLLECTOR_TOKEN }}
      name: Extract and import build stats
      run: "cat > ./runner-info.json <<EOF\n{\n  \"test_version\": \"$GITHUB_REF_NAME\"\
        ,\n  \"quarkus_version\": \"$GITHUB_SHA\",\n  \"description\": \"Quarkus CI\
        \ github runner on $GITHUB_REF_NAME branch/tag\",\n  \"triggered_by\": \"\
        Quarkus CI\"\n}\nEOF\njq . runner-info.json\n# Add runner info\ncurl -s -w\
        \ '\\n' -H \"Content-Type: application/json\" -H \"token: $UPLOAD_TOKEN\"\
        \ \\\n  --post302 --data \"@./runner-info.json\" \"${COLLECTOR_URL}/runner-info\"\
        \ | tee runner_info_id.json\nrunner_info_id=$( jq .id runner_info_id.json\
        \ )\nif [[ $runner_info_id =~ ^[0-9]+$ ]]; then\n    echo \"runner_info_id\
        \ to be used for uploads: $runner_info_id\"\nelse\n    echo \"Fatal error.\
        \ runner_info_id is not a number: $runner_info_id\"\n    exit 1\nfi\ntar -xf\
        \ build-stats.tgz\necho \"Tag to be used for uploads: '${TAG}'\"\nIFS=$'\\\
        n'\nfor bs in $(find ./ -name \\*build-output-stats.json); do\n  jq . \"$(pwd)/$bs\"\
        \n  # import the stat\n  curl -s -w '\\n' -H \"Content-Type: application/json\"\
        \ \\\n    -H \"token: $UPLOAD_TOKEN\" --post302 --data \"@$(pwd)/$bs\" \"\
        $COLLECTOR_URL/import?t=${TAG}&runnerid=${runner_info_id}\" | tee stat_id.json\n\
        \  stat_id=$( jq .id stat_id.json )\n  if [[ $stat_id =~ ^[0-9]+$ ]]; then\n\
        \    echo \"ID of imported data: $stat_id\"\n  else\n    echo \"Fatal error.\
        \ stat_id is not a number: $stat_id\"\n    exit 1\n  fi\ndone\n"
      shell: bash
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.calculate-test-jobs.outputs.native_matrix) }}
  quickstarts-tests:
    if: needs.calculate-test-jobs.outputs.run_quickstarts == 'true' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: Quickstarts Compilation - JDK ${{matrix.java.name}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-${{matrix.java.name}}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Quickstarts Compilation - JDK ${{matrix.java.name}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Set up JDK ${{ matrix.java.java-version }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java.java-version }}
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Quickstarts Compilation - JDK ${{matrix.java.name}}
    - continue-on-error: true
      id: get-quickstarts-branch
      uses: actions/github-script@v7
      with:
        result-encoding: string
        script: "if (process.env.GITHUB_REPOSITORY != 'quarkusio/quarkus') {\n  return\
          \ 'development'\n}\n\nconst branch = process.env.GITHUB_BASE_REF ? process.env.GITHUB_BASE_REF\
          \ : process.env.GITHUB_REF_NAME\nif (branch == 'main') {\n  return 'development'\n\
          } else {\n  return branch\n}\n"
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Compile Quickstarts
      run: 'git clone --depth=1 -b ${{ steps.get-quickstarts-branch.outputs.result
        }} https://github.com/quarkusio/quarkus-quickstarts.git && cd quarkus-quickstarts

        export LANG=en_US && ./mvnw -e -B -fae --settings .github/mvn-settings.xml
        clean verify -DskipTests

        '
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    'quarkus-quickstarts/**/target/*-reports/TEST-*.xml'\
        \ \\\n    'quarkus-quickstarts/target/build-report.json' \\\n    'quarkus-quickstarts/LICENSE'\
        \ \\\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Quickstarts Compilation - JDK ${{matrix.java.name}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix:
        java:
        - java-version: 17
          name: '17'
          os-name: ubuntu-latest
    timeout-minutes: 90
  tcks-test:
    if: needs.calculate-test-jobs.outputs.run_tcks == 'true' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: MicroProfile TCKs Tests
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-17" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=MicroProfile TCKs Tests" >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Add quarkusio remote
      run: git remote show quarkusio &> /dev/null || git remote add quarkusio https://github.com/quarkusio/quarkus.git
    - continue-on-error: true
      name: Reclaim Disk Space
      run: .github/ci-prerequisites.sh
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: MicroProfile TCKs Tests
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Verify
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS -Dtcks
        -pl tcks -amd clean install ${{ needs.build-jdk17.outputs.gib_args }}
    - continue-on-error: true
      name: Verify resteasy-reative dependencies
      run: ./tcks/resteasy-reactive/update-dependencies.sh $COMMON_MAVEN_ARGS
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -name '*-reports' -type d -o -name '*.log' | tar -czf test-reports.tgz
        -T -
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-tcks
        path: test-reports.tgz
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/target/*-reports/TEST-*.xml'\
        \ \\\n    'target/build-report.json' \\\n    'target/gradle-build-scan-url.txt'\
        \ \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-MicroProfile TCKs Tests
        path: 'build-reports.zip

          '
        retention-days: 7
    timeout-minutes: 150
  virtual-thread-native-tests:
    if: needs.calculate-test-jobs.outputs.virtual_threads_matrix != '{}' && (github.repository
      == 'quarkusio/quarkus' || !endsWith(github.ref, '/main'))
    name: Native Tests - Virtual Thread - ${{matrix.category}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'category=$(echo -n ''${{matrix.category}}'' | tr ''[:upper:]'' ''[:lower:]''
        | tr -c ''[:alnum:]-'' ''-'' | sed -E ''s/-+/-/g'')

        echo "GE_TAGS=virtual-thread-native-${category}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Native Tests - Virtual Thread - ${{matrix.category}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21
    - continue-on-error: true
      name: Update Docker Client User Agent
      run: "if [ -f ~/.docker/config.json ]; then\n  cat <<< $(jq '.HttpHeaders +=\
        \ {\"User-Agent\": \"Quarkus-CI-Docker-Client\"}' ~/.docker/config.json) >\
        \ ~/.docker/config.json\nfi\n"
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Native Tests - Virtual Thread - ${{matrix.category}}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
        CONTAINER_BUILD: ${{startsWith(matrix.os-name, 'windows') && 'false' || 'true'}}
        TEST_MODULES: ${{matrix.test-modules}}
      name: Build
      run: 'export LANG=en_US && ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS
        $PTS_MAVEN_ARGS -f integration-tests/virtual-threads -pl "$TEST_MODULES" $NATIVE_TEST_MAVEN_ARGS
        -Dextra-args=--enable-preview -Dquarkus.native.container-build=true

        '
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    'integration-tests/virtual-threads/**/target/*-reports/TEST-*.xml'\
        \ \\\n    'integration-tests/virtual-threads/target/build-report.json' \\\n\
        \    'integration-tests/virtual-threads/target/gradle-build-scan-url.txt'\
        \ \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Virtual Thread Support Tests Native - ${{matrix.category}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.calculate-test-jobs.outputs.virtual_threads_matrix)
        }}
      max-parallel: 12
    timeout-minutes: ${{matrix.timeout}}
name: Quarkus CI
on:
  repository_dispatch:
    types: trigger-ga___ci-actions-incremental.yml
