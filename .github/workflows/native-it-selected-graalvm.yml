defaults:
  run:
    shell: bash
env:
  COMMON_MAVEN_ARGS: -e -B --settings .github/mvn-settings.xml --fail-at-end
  COMMON_TEST_MAVEN_ARGS: -Dformat.skip -Denforcer.skip -DskipDocs -Dforbiddenapis.skip
    -DskipExtensionValidation -DskipCodestartValidation
  DB_NAME: hibernate_orm_test
  DB_PASSWORD: hibernate_orm_test
  DB_USER: hibernate_orm_test
  DEVELOCITY_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
  JVM_TEST_MAVEN_ARGS: -Dtest-containers -Dstart-containers -Dquarkus.test.hang-detection-timeout=60
  LANG: en_US.UTF-8
  NATIVE_TEST_MAVEN_ARGS: -Dtest-containers -Dstart-containers -Dquarkus.native.native-image-xmx=6g
    -Dnative -Dnative.surefire.skip -Dno-descriptor-tests clean install -DskipDocs
  PTS_MAVEN_ARGS: -Ddevelocity.pts.enabled=${{ github.event_name == 'pull_request'
    && github.base_ref == 'main' && 'true' || 'false' }}
  PULL_REQUEST_NUMBER: ${{ github.event.number }}
jobs:
  build-jdk17:
    name: Initial JDK 17 Build - ${{ inputs.BRANCH }}
    outputs:
      gib_args: ${{ steps.get-gib-args.outputs.gib_args }}
      gib_impacted: ${{ steps.get-gib-impacted.outputs.impacted_modules }}
      m2-cache-key: ${{ steps.cache-key.outputs.m2-cache-key }}
      quarkus-metadata-cache-key: ${{ steps.cache-key.outputs.quarkus-metadata-cache-key
        }}
      quarkus-metadata-cache-key-default: ${{ steps.cache-key.outputs.quarkus-metadata-cache-key-default
        }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'echo "GE_TAGS=jdk-17" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Initial JDK 17 Build" >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ inputs.BRANCH }}
    - continue-on-error: true
      name: Add quarkusio remote
      run: git remote show quarkusio &> /dev/null || git remote add quarkusio https://github.com/quarkusio/quarkus.git
    - continue-on-error: true
      name: Reclaim Disk Space
      run: .github/ci-prerequisites.sh
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      id: cache-key
      name: Generate cache key
      run: 'CURRENT_WEEK=$(/bin/date -u "+%Y-%U")

        echo "m2-cache-key=m2-cache-${CURRENT_WEEK}" >> $GITHUB_OUTPUT

        echo "quarkus-metadata-cache-key=quarkus-metadata-cache-${CURRENT_WEEK}-${{
        github.ref_name }}" >> $GITHUB_OUTPUT

        echo "quarkus-metadata-cache-key-default=quarkus-metadata-cache-${CURRENT_WEEK}-${{
        github.event.repository.default_branch }}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: cache-maven
      name: Cache Maven Repository
      uses: actions/cache@v4
      with:
        key: ${{ steps.cache-key.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Verify native-tests.json
      run: ./.github/verify-tests-json.sh native-tests.json integration-tests/
    - continue-on-error: true
      name: Verify virtual-threads-tests.json
      run: ./.github/verify-tests-json.sh virtual-threads-tests.json integration-tests/virtual-threads/
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Initial JDK 17 Build
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
      name: Build
      run: './mvnw -T1C $COMMON_MAVEN_ARGS -DskipTests -DskipITs -DskipDocs -Dinvoker.skip
        -Dskip.gradle.tests -Djbang.skip -Dtruststore.skip -Dno-format -Dtcks -Prelocations
        clean install

        '
    - continue-on-error: true
      name: Verify extension dependencies
      run: ./update-extension-dependencies.sh $COMMON_MAVEN_ARGS
    - continue-on-error: true
      env:
        PULL_REQUEST_BASE: ${{ github.event.pull_request.base.ref }}
      id: get-gib-args
      name: Get GIB arguments
      run: "# See also: https://github.com/gitflow-incremental-builder/gitflow-incremental-builder#configuration\
        \ (GIB)\n# Common GIB_ARGS for all CI cases (hint: see also root pom.xml):\n\
        # - disableSelectedProjectsHandling: required to detect changes in jobs that\
        \ use -pl\n# - untracked: to ignore files created by jobs (and uncommitted\
        \ to be consistent)\nGIB_ARGS=\"-Dincremental -Dgib.disableSelectedProjectsHandling\
        \ -Dgib.untracked=false -Dgib.uncommitted=false\"\nif [ -n \"$PULL_REQUEST_BASE\"\
        \ ]\nthen\n  # The PR defines a clear merge target so just use that branch\
        \ for reference, *unless*:\n  # - the current branch is a backport branch\
        \ targeting some released branch like 1.10 (merge target is not main)\n  GIB_ARGS+=\"\
        \ -Dgib.referenceBranch=origin/$PULL_REQUEST_BASE -Dgib.disableIfReferenceBranchMatches='origin/\\\
        d+\\.\\d+'\"\nelse\n  # No PR means the merge target is uncertain so fetch\
        \ & use main of quarkusio/quarkus, *unless*:\n  # - the current branch is\
        \ main or some released branch like 1.10\n  # - the current branch is a backport\
        \ branch which is going to target some released branch like 1.10 (merge target\
        \ is not main)\n  GIB_ARGS+=\" -Dgib.referenceBranch=refs/remotes/quarkusio/main\
        \ -Dgib.fetchReferenceBranch -Dgib.disableIfBranchMatches='main|\\d+\\.\\\
        d+|.*backport.*'\"\nfi\necho \"GIB_ARGS: $GIB_ARGS\"\necho \"gib_args=${GIB_ARGS}\"\
        \ >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      id: get-gib-impacted
      name: Get GIB impacted modules
      run: "./mvnw -q -T1C $COMMON_MAVEN_ARGS -Dscan=false -Dtcks -Dquickly-ci ${{\
        \ steps.get-gib-args.outputs.gib_args }} -Dgib.logImpactedTo=gib-impacted.log\
        \ validate\nif [ -f gib-impacted.log ]\nthen\n  GIB_IMPACTED=$(cat gib-impacted.log)\n\
        else\n  GIB_IMPACTED='_all_'\nfi\necho \"GIB_IMPACTED: ${GIB_IMPACTED}\"\n\
        # three steps to retain linefeeds in output for other jobs\n# (see https://github.com/github/docs/issues/21529\
        \ and https://github.com/orgs/community/discussions/26288#discussioncomment-3876281)\n\
        echo 'impacted_modules<<EOF' >> $GITHUB_OUTPUT\necho \"${GIB_IMPACTED}\" >>\
        \ $GITHUB_OUTPUT\necho 'EOF' >> $GITHUB_OUTPUT\n"
    - continue-on-error: true
      name: Tar .m2/repository/io/quarkus
      run: tar -czf m2-io-quarkus.tgz -C ~ .m2/repository/io/quarkus
    - continue-on-error: true
      name: Upload .m2/repository/io/quarkus
      uses: actions/upload-artifact@v4
      with:
        name: m2-io-quarkus
        path: m2-io-quarkus.tgz
        retention-days: 7
    - continue-on-error: true
      name: Delete snapshots artifacts from cache
      run: find ~/.m2 -name \*-SNAPSHOT -type d -exec rm -rf {} +
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    'target/build-report.json' \\\n\
        \    'target/gradle-build-scan-url.txt' \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Initial JDK 17 Build
        path: 'build-reports.zip

          '
        retention-days: 7
  build-report:
    if: always()
    name: Build report - ${{inputs.NATIVE_COMPILER}} ${{inputs.NATIVE_COMPILER_VERSION}}
      - ${{inputs.BRANCH}}
    needs:
    - build-jdk17
    - native-tests
    - virtual-thread-native-tests
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/download-artifact@v4
      with:
        path: build-reports-artifacts
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      name: Produce report and add it as job summary
      uses: quarkusio/action-build-reporter@main
      with:
        build-reports-artifacts-path: build-reports-artifacts
        github-token: ${{ secrets.GITHUB_TOKEN }}
  calculate-test-jobs:
    env:
      GIB_IMPACTED_MODULES: ${{ needs.build-jdk17.outputs.gib_impacted }}
    name: Calculate Test Jobs
    needs: build-jdk17
    outputs:
      native_matrix: ${{ steps.calc-native-matrix.outputs.matrix }}
      virtual_threads_matrix: ${{ steps.calc-virtual-threads-matrix.outputs.matrix
        }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      id: calc-native-matrix
      name: Calculate matrix from native-tests.json
      run: 'echo "GIB_IMPACTED_MODULES: ${GIB_IMPACTED_MODULES}"

        json=$(.github/filter-native-tests-json.sh "${GIB_IMPACTED_MODULES}" | tr
        -d ''\n'')

        # Remove Windows from the matrix

        json=$(echo $json | jq ''del(.include[] | select(."os-name" == "windows-latest"))'')

        json=$(echo $json | tr -d ''\n'')

        echo "${json}"

        echo "matrix=${json}" >> $GITHUB_OUTPUT

        '
    - continue-on-error: true
      id: calc-virtual-threads-matrix
      name: Calculate matrix from virtual-threads-tests.json
      run: 'echo "GIB_IMPACTED_MODULES: ${GIB_IMPACTED_MODULES}"

        json=$(.github/filter-virtual-threads-tests-json.sh "${GIB_IMPACTED_MODULES}"
        | tr -d ''\n'')

        # Remove Windows from the matrix

        json=$(echo $json | jq ''del(.include[] | select(."os-name" == "windows-latest"))'')

        json=$(echo $json | tr -d ''\n'')

        echo "${json}"

        echo "matrix=${json}" >> $GITHUB_OUTPUT

        '
  native-tests:
    env:
      MAVEN_OPTS: -Xmx1g
    name: Native Tests - ${{matrix.category}} - ${{inputs.NATIVE_COMPILER}} ${{inputs.NATIVE_COMPILER_VERSION}}
      - ${{inputs.BRANCH}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'category=$(echo -n ''${{matrix.category}}'' | tr ''[:upper:]'' ''[:lower:]''
        | tr -c ''[:alnum:]-'' ''-'' | sed -E ''s/-+/-/g'')

        echo "GE_TAGS=native-${category}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Native Tests - ${{matrix.category}}" >>
        "$GITHUB_ENV"

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Reclaim Disk Space
      run: .github/ci-prerequisites.sh
    - continue-on-error: true
      name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 17
    - continue-on-error: true
      id: setup-graalvm
      name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        distribution: ${{ inputs.NATIVE_COMPILER }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: ${{ inputs.NATIVE_COMPILER_VERSION }}
    - continue-on-error: true
      name: Update Docker Client User Agent
      run: "if [ -f ~/.docker/config.json ]; then\n  cat <<< $(jq '.HttpHeaders +=\
        \ {\"User-Agent\": \"Quarkus-CI-Docker-Client\"}' ~/.docker/config.json) >\
        \ ~/.docker/config.json\nfi\n"
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Native Tests - ${{matrix.category}}
    - continue-on-error: true
      name: Cache Quarkus metadata
      uses: actions/cache@v4
      with:
        key: ${{ needs.build-jdk17.outputs.quarkus-metadata-cache-key }}
        path: '**/.quarkus/quarkus-prod-config-dump'
        restore-keys: ${{ needs.build-jdk17.outputs.quarkus-metadata-cache-key-default
          }}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
        TEST_MODULES: ${{matrix.test-modules}}
      name: Build
      run: ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS $PTS_MAVEN_ARGS -f integration-tests
        -pl "$TEST_MODULES" $NATIVE_TEST_MAVEN_ARGS
    - continue-on-error: true
      if: failure()
      name: Prepare failure archive (if maven failed)
      run: find . -type d -name '*-reports' -o -wholename '*/build/reports/tests/functionalTest'
        -o -name '*.log' | tar -czf test-reports.tgz -T -
    - continue-on-error: true
      if: failure()
      name: Upload failure Archive (if maven failed)
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-native-${{matrix.category}}
        path: test-reports.tgz
        retention-days: 7
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    '**/target/*-reports/TEST-*.xml'\
        \ \\\n    '**/build/test-results/test/TEST-*.xml' \\\n    'target/build-report.json'\
        \ \\\n    'target/gradle-build-scan-url.txt' \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Native Tests - ${{matrix.category}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.calculate-test-jobs.outputs.native_matrix) }}
      max-parallel: 12
    timeout-minutes: ${{matrix.timeout}}
  virtual-thread-native-tests:
    name: Native Tests - Virtual Thread - ${{matrix.category}} - ${{inputs.NATIVE_COMPILER}}
      ${{inputs.NATIVE_COMPILER_VERSION}} - ${{inputs.BRANCH}}
    needs:
    - build-jdk17
    - calculate-test-jobs
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Gradle Enterprise environment
      run: 'category=$(echo -n ''${{matrix.category}}'' | tr ''[:upper:]'' ''[:lower:]''
        | tr -c ''[:alnum:]-'' ''-'' | sed -E ''s/-+/-/g'')

        echo "GE_TAGS=virtual-thread-native-${category}" >> "$GITHUB_ENV"

        echo "GE_CUSTOM_VALUES=gh-job-name=Native Tests - Virtual Thread - ${{matrix.category}}"
        >> "$GITHUB_ENV"

        '
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      name: Restore Maven Repository
      uses: actions/cache/restore@v4
      with:
        key: ${{ needs.build-jdk17.outputs.m2-cache-key }}
        path: ~/.m2/repository
    - continue-on-error: true
      name: Download .m2/repository/io/quarkus
      uses: actions/download-artifact@v4
      with:
        name: m2-io-quarkus
        path: .
    - continue-on-error: true
      name: Extract .m2/repository/io/quarkus
      run: tar -xzf m2-io-quarkus.tgz -C ~
    - continue-on-error: true
      name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21
    - continue-on-error: true
      id: setup-graalvm
      name: Setup GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        distribution: ${{ inputs.NATIVE_COMPILER }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        java-version: ${{ inputs.NATIVE_COMPILER_VERSION }}
    - continue-on-error: true
      name: Update Docker Client User Agent
      run: "if [ -f ~/.docker/config.json ]; then\n  cat <<< $(jq '.HttpHeaders +=\
        \ {\"User-Agent\": \"Quarkus-CI-Docker-Client\"}' ~/.docker/config.json) >\
        \ ~/.docker/config.json\nfi\n"
    - continue-on-error: true
      name: Setup Develocity Build Scan capture
      uses: gradle/develocity-actions/maven-setup@v1
      with:
        add-job-summary: false
        add-pr-comment: false
        capture-strategy: ON_DEMAND
        job-name: Native Tests - Virtual Thread - ${{matrix.category}}
    - continue-on-error: true
      env:
        CAPTURE_BUILD_SCAN: true
        TEST_MODULES: ${{matrix.test-modules}}
      name: Build
      run: 'export LANG=en_US && ./mvnw $COMMON_MAVEN_ARGS $COMMON_TEST_MAVEN_ARGS
        $PTS_MAVEN_ARGS -f integration-tests/virtual-threads -pl "$TEST_MODULES" $NATIVE_TEST_MAVEN_ARGS

        '
    - continue-on-error: true
      if: always()
      name: Prepare build reports archive
      run: "7z a -tzip build-reports.zip -r \\\n    'integration-tests/virtual-threads/**/target/*-reports/TEST-*.xml'\
        \ \\\n    'integration-tests/virtual-threads/target/build-report.json' \\\n\
        \    'integration-tests/virtual-threads/target/gradle-build-scan-url.txt'\
        \ \\\n    LICENSE\n"
    - continue-on-error: true
      if: always()
      name: Upload build reports
      uses: actions/upload-artifact@v4
      with:
        name: build-reports-Virtual Thread Support Tests Native - ${{matrix.category}}
        path: 'build-reports.zip

          '
        retention-days: 7
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.calculate-test-jobs.outputs.virtual_threads_matrix)
        }}
      max-parallel: 12
    timeout-minutes: ${{matrix.timeout}}
name: Quarkus CI - Native IT on selected GraalVM
on:
  repository_dispatch:
    types: trigger-ga___native-it-selected-graalvm.yml
